import Data.Maybe

let drums = (subtract 60 <$>) <$> [("bd", 36),
                                   ("rs", 37),
                                   ("sd", 38),
                                   ("sn", 38),
                                   ("cp", 39),
                                   ("lt", 41),
                                   ("hc", 42),
                                   ("ch", 42),
                                   ("mt", 45),
                                   ("ho", 46),
                                   ("oh", 46),
                                   ("ht", 48),
                                   ("cr", 49),
                                   ("rd", 51),
                                   ("cb", 56),
                                   ("cgh", 62),
                                   ("cgm", 63),
                                   ("cgl", 64),
                                   ("ma", 70),
                                   ("cl", 75)
                                  ]
    drum :: Pattern String -> ParamPattern
    drum p = (note $ ((\x -> fromMaybe 0 (lookup x drums)) <$> p)) # midichan 9 # s "midi"
    pans = [(-12, 43), -- ht
            (-22, 27), -- sn
            (-24, 21) -- bd
           ]
    begins = [(-12, 42), -- ht
              (-22, 26), -- sn
              (-24, 20) -- bd
             ]
    dists = [(-12, 44), -- ht
             (-22, 28), -- sn
             (-24, 22) -- bd
            ]
    tunes = [(-12, 45), -- ht
             (-22, 29), -- sn
             (-24, 23) -- bd
            ]
    (midichan, midichan_p) = pF "midiChan" Nothing            
    (dist, dist_p) = pF "dist" Nothing            
    (tune, tune_p) = pF "tune" Nothing            
    manip :: ParamPattern -> ParamPattern
    manip p = stack [sendcc pans panp,
                     sendcc begins beginp,
                     sendcc dists distp,
                     sendcc tunes tunep,
                     p
                    ]
      where notep = getF note_p p
            panp = getF pan_p p
            beginp = getF begin_p p
            distp = getF dist_p p
            tunep = getF tune_p p
            sendcc table p = (ccn (fromJust <$> (filterValues isJust $ ((\x -> lookup x table) <$> notep)))
                             # ccv (p * 127) # midichan 9 # s "midi") # nudge "-0.04"
in
d1 $ manip $ drum "[bd(<3 4 5>,8,<0 2>), sn*2, ~ ht*4]"
  # begin 1 # dist (slow 8 sine) # gain 1.2 # tune saw # pan rand

