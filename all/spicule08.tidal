d2 $ (off "<0.125 0.25 0.75>" (# (shape 0.9 # gain 0.8)) $ sound "kicklinn ~ [~ kicklinn] [~ kicklinn]")
  # speed "[2]"
  # legato 0.5
  |*| gain 1.2

d3 $ sound "[~ ~ cp8:3 ~] sd:1([1*8 3*8]/16,8)"
  # delay 0.9 # delaytime 0.01 # delayfb 0.6
  # legato 1 # orbit 1

d4 $ (every 2 (# glass 0.1)) $ chunk 4 (hurry 2) $ stack [struct "<x(5,8) x*4>" $ sound "kicklinn"
                                                          # shape 0.9
                                                         ]
  |+| gain 0.8

d5 $ sound "sr(3,8)"
  |+| n (slow 64 $ "0 .. 15")

do m silence
   d3 $ slow "[2 [4 1]]/2" $ off 0.25 (# (s "xx" # gain "0.8")) $ slowspread (\x -> stut 16 0.8 x) [(1/32), (1/8), (1/32), (1/4)]
     $ n "[a8 g7] ~ a7 f6" # sound "rash]"
     # cutoff (slow 4 $ saw1 * 4000 + 1000)
     # resonance 0.3
     # cut (1)
     # shape 0.6
     |+| n "<0 7 12 5>"

let notes = (someCycles (subtract 12) "[c3 c5] [a3 a5] [f4 g5] [e3 e5]" + "<0@7 12>")
    sounds = n "30 31 32 33" # s "jvr"
    str = seqPLoop [(0,4, fast "<1 2>" $ "<x(3,8) x(5,8)>"),
                    (4,8, "<[x ~ x x] x(3,8)>")
                   ]
in 
do d3 $ stack [(off (1/8) (|+| n 7) $ struct str $ sounds
                # shape 0.6 # speed 1),
               off 0.125 (|+| n 7) $ struct (str) $ n notes # sound "dirty"
               |+| n (12 * 5)
               # orbit 2 # room 0.2 # size 0.9
              ]
   m $ off 0.125 (|+| n 7) $ struct str $ n notes
     # ctf sine
     # dur (scale 0.08 0.04 saw)


d1 $ never (superimpose (off "<0.25 0.5 0.75>" (|+| n "12") . (# (s "superpiano" # gain 0.75)))
                                         . struct "[x(3,8)]/2") $ jux rev $ off 0.25 (|+| octave "<1 -1>") $ off 0.125 (|+| n 7) $ n "3(<3 5 2>,8,<0 2 4>)"
  # octave "<4 5 3>"
  |+| n "<0 7 [-5 2] 4>"
  # sound "supermandolin"
  # sustain (slow 2 $ scale 0.5 1 saw)
  # room 0.6
  # size 0.9
  # orbit 2

cps (-1)

cps (1.1)
